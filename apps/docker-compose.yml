version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: smarthome-postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./smart_home/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d smarthome"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - smarthome-network
    restart: unless-stopped

  temperature-api:
    build:
      context: ./temperature-api
    container_name: temperature-api
    ports:
      - "8081:8081"
    networks:
      - smarthome-network
    restart: unless-stopped
  telemetry-service:
    build:
      context: ./telemetry-service
    container_name: telemetry-service
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8082/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - smarthome-network
    restart: unless-stopped
  devices-service:
    build:
      context: ./devices-service
    container_name: devices-service
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8083/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - smarthome-network
    restart: unless-stopped
  app:
    build:
      context: ./smart_home
      dockerfile: Dockerfile
    container_name: smarthome-app
    depends_on:
      postgres:
        condition: service_healthy
      telemetry-service:
        condition: service_started
      devices-service:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - smarthome-network

volumes:
  postgres_data:

networks:
  smarthome-network:
    driver: bridge